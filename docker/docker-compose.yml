x-base: &base
  restart: unless-stopped
  # network_mode: host
  # env_file: defaults.env

services:
  mire:
    <<: *base
    container_name: mire
    build:
      context: ..
      dockerfile: docker/Dockerfile.mire
    ports:
      - ${MIRE_PORT}:${MIRE_PORT}
    environment:
      NODE_ENV: production
      HOST: ${MIRE_HOST}
      PORT: ${MIRE_PORT}

  nginx:
    <<: *base
    container_name: nginx
    build:
      context: ..
      dockerfile: docker/Dockerfile.nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - mire

  nginx-exporter:
    <<: *base
    container_name: nginx-exporter
    image: nginx/nginx-prometheus-exporter@sha256:6edfb73afd11f2d83ea4e8007f5068c3ffaa38078a6b0ad1339e5bd2f637aacd
    command:
      - -nginx.scrape-uri=http://nginx/metrics
    ports:
      - "9113:9113"
    depends_on:
      - nginx

  prometheus:
    <<: *base
    container_name: prometheus
    image: prom/prometheus@sha256:7a34573f0b9c952286b33d537f233cd5b708e12263733aa646e50c33f598f16c
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - nginx

  grafana:
    <<: *base
    container_name: grafana
    image: grafana/grafana@sha256:5d4950e57145b104defb5d56b3632ba1463440a915cb9955114d04f0c46f2e5b
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
